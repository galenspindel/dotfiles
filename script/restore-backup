#!/usr/bin/env bash
#
# restore-backup
#
# Restores backed up configuration files and removes dotfiles symlinks

set -e

cd "$(dirname "$0")/.."
DOTFILES_ROOT=$(pwd -P)

# Color output functions
info () {
  printf "\r  [ \033[00;34m..\033[0m ] $1\n"
}

success () {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

warn () {
  printf "\r\033[2K  [ \033[0;33mWARN\033[0m ] $1\n"
}

fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
}

user () {
  printf "\r  [ \033[0;33m??\033[0m ] $1\n"
}

# Find and restore backup files
restore_backups() {
  info 'Looking for backup files to restore'
  
  backup_count=0
  for backup_file in "$HOME"/.*.backup; do
    if [ -f "$backup_file" ]; then
      original_file="${backup_file%.backup}"
      
      user "Restore backup: $backup_file -> $original_file? [y/N]"
      read -n 1 action
      echo
      
      case "$action" in
        y|Y )
          if [ -L "$original_file" ] || [ -f "$original_file" ]; then
            rm -f "$original_file"
          fi
          mv "$backup_file" "$original_file"
          success "Restored $original_file"
          ((backup_count++))
          ;;
        * )
          info "Skipped $backup_file"
          ;;
      esac
    fi
  done
  
  if [ $backup_count -eq 0 ]; then
    info 'No backup files found or none restored'
  else
    success "Restored $backup_count backup files"
  fi
}

# Remove dotfiles symlinks
remove_symlinks() {
  info 'Removing dotfiles symlinks'
  
  removed_count=0
  for src in $(find -H "$DOTFILES_ROOT" -maxdepth 2 -name '*.symlink' -not -path '*.git*' 2>/dev/null); do
    dst="$HOME/.$(basename "${src%.*}")"
    
    if [ -L "$dst" ]; then
      # Check if it's actually pointing to our dotfiles
      if [ "$(readlink "$dst")" = "$src" ]; then
        rm "$dst"
        success "Removed symlink: $dst"
        ((removed_count++))
      else
        warn "Symlink $dst points elsewhere, skipping"
      fi
    fi
  done
  
  if [ $removed_count -eq 0 ]; then
    info 'No dotfiles symlinks found'
  else
    success "Removed $removed_count symlinks"
  fi
}

# Remove generated config files
remove_generated_configs() {
  info 'Removing generated configuration files'
  
  if [ -f "$DOTFILES_ROOT/git/gitconfig.local.symlink" ]; then
    user "Remove generated git configuration? [y/N]"
    read -n 1 action
    echo
    
    case "$action" in
      y|Y )
        rm -f "$DOTFILES_ROOT/git/gitconfig.local.symlink"
        success "Removed git configuration"
        ;;
      * )
        info "Kept git configuration"
        ;;
    esac
  fi
}

# Main execution
main() {
  echo ''
  echo 'Dotfiles restoration utility'
  echo ''
  
  warn 'This will restore backup files and remove dotfiles symlinks.'
  user 'Are you sure you want to continue? [y/N]'
  read -n 1 action
  echo
  
  case "$action" in
    y|Y )
      echo ''
      restore_backups
      remove_symlinks
      remove_generated_configs
      
      echo ''
      success 'Restoration complete!'
      echo ''
      echo 'Your system has been restored to its pre-dotfiles state.'
      echo 'You may want to restart your shell or reload your configurations.'
      ;;
    * )
      echo ''
      info 'Restoration cancelled'
      ;;
  esac
}

main "$@"